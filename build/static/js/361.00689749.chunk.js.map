{"version":3,"file":"static/js/361.00689749.chunk.js","mappings":"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","sources":["views/pickupReq/newPickupReq/NewPickupReq.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { MapModal } from '../../../components';\r\n\r\nimport './newPickupReq.scoped.css';\r\n\r\nexport default function NewPickupReq(props) {\r\n  const [validated, setValidated] = useState(false);\r\n  const [form, setForm] = useState({})\r\n  const [position, setPosition] = useState({});\r\n  const [multiselectstyle, setMultiselectstyle] = useState({\r\n    chips: {\r\n      background: '#17d193'\r\n    },\r\n    highlightOption: {\r\n      background: '#17d193'\r\n    },\r\n  });\r\n  const [mapModal, setMapModal] = useState(false);\r\n  const mapModalClose = () => setMapModal(false);\r\n  const mapModalShow = () => setMapModal(true);\r\n\r\n  useEffect(() => {\r\n    if (navigator?.geolocation) {\r\n      navigator.geolocation.getCurrentPosition((location) => {\r\n        if (location) setForm({\r\n          ...form,\r\n          location: { lat: location.coords.latitude, lng: location.coords.longitude },\r\n        })\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  const checkValidity = (e) => {\r\n    if (form.wasteTypes == undefined || form.wasteTypes.length == 0) {\r\n      setMultiselectstyle({\r\n        chips: {\r\n          background: '#17d193'\r\n        },\r\n        highlightOption: {\r\n          background: '#17d193'\r\n        },\r\n        searchBox: {\r\n          border: '1px solid #dc3545'\r\n        }\r\n      })\r\n      return true;\r\n    } else {\r\n      setMultiselectstyle({\r\n        chips: {\r\n          background: '#17d193'\r\n        },\r\n        highlightOption: {\r\n          background: '#17d193'\r\n        },\r\n      })\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const inForm = e.currentTarget;\r\n    checkValidity()\r\n    if (inForm.checkValidity() === false || !form.location.lat || !form.location.lng || checkValidity()) {\r\n      setValidated(true);\r\n      console.log(form);\r\n    } else {\r\n\r\n      console.log(form);\r\n      axios.post('http://localhost:3001/api/pickupRequest', form)\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((error) => {         // handle error\r\n          console.log(error);\r\n        })\r\n        .then(() => {     // always executed\r\n        });\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Request successfully sent!',\r\n        showConfirmButton: false,\r\n        timer: 2000\r\n      })\r\n      setForm({\r\n        ...form,\r\n        company: '',\r\n        note: '',\r\n        size: '',\r\n        wasteTypes: []\r\n      })\r\n      setValidated(false);\r\n    }\r\n\r\n  };\r\n\r\n\r\n  const handleSelectChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n  const changeWasteTypes = (value) => {\r\n    setForm({\r\n      ...form,\r\n      wasteTypes: value,\r\n    })\r\n  }\r\n  const removeWasteTypes = (value) => {\r\n    setForm({\r\n      ...form,\r\n      wasteTypes: value,\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h4 className=\"content-title\">Create New Request</h4>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"card p-4 form\">\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\" className='d-flex'>\r\n                <Col md=\"2\">\r\n                  <Form.Label>Company</Form.Label>\r\n                </Col>\r\n                <Col md=\"10\">\r\n                  <Form.Select required value={form.company} name=\"company\" onChange={handleSelectChange} className=\"font-s\">\r\n                    <option value=\"\">Select Company</option>\r\n                    <option value=\"ABC Inc\">ABC Inc</option>\r\n                    <option value=\"Earthology Inc\">Earthology Inc</option>\r\n                    <option value=\"Browning-Ferris Industries\">Browning-Ferris Industries</option>\r\n                    <option value=\"Casella Waste Systems\">Casella Waste Systems</option>\r\n                  </Form.Select>\r\n                </Col>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\" className='d-flex'>\r\n                <Col md=\"2\">\r\n                  <Form.Label>Location</Form.Label>\r\n                </Col>\r\n                <Col md=\"10\">\r\n                  <Form.Control\r\n                    required\r\n                    readOnly\r\n                    type=\"text\"\r\n                    placeholder=\"Location\"\r\n                    onChange={handleSelectChange}\r\n                    value={form.location?.formatted_address}\r\n                    onClick={mapModalShow}\r\n                    name=\"location\"\r\n                    className='font-s'\r\n                  />\r\n                  <span style={{ fontSize: '12px' }}>Live Location</span>\r\n                </Col>\r\n              </Form.Group>\r\n\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\" className='d-flex'>\r\n                <Col md=\"2\">\r\n                  <Form.Label>Note</Form.Label>\r\n                </Col>\r\n                <Col md=\"10\">\r\n                  <Form.Control\r\n                    required\r\n                    type=\"text\"\r\n                    placeholder=\"Note\"\r\n                    onChange={handleSelectChange}\r\n                    name=\"note\"\r\n                    value={form.note}\r\n                    className=\"font-s\"\r\n                  />\r\n                  {/* <Form.Control.Feedback>Looks good!</Form.Control.Feedback> */}\r\n                </Col>\r\n              </Form.Group>\r\n            </Row>\r\n            <Row className=\"mb-3\">\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\" className='d-flex'>\r\n                <Col md=\"4\">\r\n                  <Form.Label>Waste Types</Form.Label>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                  <Multiselect\r\n                    required\r\n                    className='from-control'\r\n                    isObject={false}\r\n                    onSelect={changeWasteTypes} // Function will trigger on select event\r\n                    onRemove={removeWasteTypes}\r\n                    selectedValues={\r\n                      form.wasteTypes\r\n                    }\r\n                    options={[\r\n                      'Plastic',\r\n                      'Glass',\r\n                      'Iron',\r\n                    ]}\r\n                    placeholder=\"Waste Types\"\r\n                    style={multiselectstyle}\r\n                  />\r\n                  {/* <Form.Control.Feedback>Looks good!</Form.Control.Feedback> */}\r\n                </Col>\r\n              </Form.Group>\r\n              <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\" className='d-flex'>\r\n                <Col md=\"4\">\r\n                  <Form.Label>Size</Form.Label>\r\n                </Col>\r\n                <Col md=\"8\">\r\n                  <Form.Select required onChange={handleSelectChange} name=\"size\" value={form.size} className=\"d-flex\">\r\n                    <option value=\"\">Select Size</option>\r\n                    <option value=\"Small\">Small</option>\r\n                    <option value=\"Mediam\">Mediam</option>\r\n                    <option value=\"Large\">Large</option>\r\n                  </Form.Select>\r\n                  {/* <Form.Control.Feedback>Looks good!</Form.Control.Feedback> */}\r\n                </Col>\r\n              </Form.Group>\r\n            </Row>\r\n\r\n            <Col md=\"12\" className='d-flex justify-content-end'>\r\n              {/* <Button>Reset</Button> */}\r\n              <Button type=\"submit\" >Request</Button>\r\n            </Col>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n\r\n      <MapModal\r\n        show={mapModal}\r\n        mapModalShow={mapModalShow}\r\n        mapModalClose={mapModalClose}\r\n        setForm={setForm}\r\n        form={form} />\r\n    </>\r\n  )\r\n};\r\n\r\n"],"names":["NewPickupReq","props","useState","validated","setValidated","form","setForm","chips","background","highlightOption","multiselectstyle","setMultiselectstyle","mapModal","setMapModal","mapModalShow","useEffect","navigator","geolocation","getCurrentPosition","location","lat","coords","latitude","lng","longitude","checkValidity","e","undefined","wasteTypes","length","searchBox","border","handleSelectChange","target","name","value","className","Form","noValidate","onSubmit","preventDefault","inForm","currentTarget","console","log","axios","then","res","catch","error","Swal","icon","title","showConfirmButton","timer","company","note","size","Row","as","Col","md","controlId","required","onChange","readOnly","type","placeholder","formatted_address","onClick","style","fontSize","isObject","onSelect","onRemove","selectedValues","options","Button","show","mapModalClose"],"sourceRoot":""}