{"version":3,"file":"static/js/964.443f926d.chunk.js","mappings":"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","sources":["views/Company-Administration/addCompany/AddCompany.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport React, { useState } from 'react'\r\nimport { Button, Col, Container, Form, Row } from 'react-bootstrap'\r\nimport './addcompany.css'\r\n\r\nexport default function AddCompany() {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [address, setAddress] = useState('')\r\n  const [telephone, setTelephone] = useState('')\r\n  const [customers, setCustomers] = useState('')\r\n  const [centers, setCenters] = useState('')\r\n  const [logo, setLogo] = useState('')\r\n  const [openhour, setOpenhour] = useState('')\r\n  const [closehour, setClosehour] = useState('')\r\n  const [opendays, setOpendays] = useState('')\r\n  const [slogan, setSlogan] = useState('')\r\n  const [about, setAbout] = useState('')\r\n  const [nameErr, setnameErr] = useState({})\r\n  const [telephoneErr, settelephoneErr] = useState({})\r\n  const [emailErr, setemailErr] = useState({})\r\n  const [isShow, setIsShow] = useState(false)\r\n\r\n  function createData(e) {\r\n    e.preventDefault()\r\n\r\n    const isValid = formValidation()\r\n    if (isValid) {\r\n      //send this data to your back\r\n      setName('')\r\n      setTelephone('')\r\n      setEmail('')\r\n    }\r\n\r\n\r\n\r\n    const company = {\r\n      name,\r\n      email,\r\n      address,\r\n      telephone,\r\n      customers,\r\n      centers,\r\n      logo,\r\n      openhour,\r\n      closehour,\r\n      opendays,\r\n      slogan,\r\n      about,\r\n    }\r\n\r\n    console.log(company)\r\n\r\n    axios\r\n      .post('http://localhost:3001/api/company/addcompany', company)\r\n      .then(() => {\r\n        console.log('CREATE PROCEED!')\r\n\r\n        onReset()\r\n        alert('Successfully Created!')\r\n      })\r\n      .catch((err) => {\r\n        alert(err)\r\n      })\r\n  }\r\n\r\n  const formValidation = () => {\r\n    const nameErr = {}\r\n\r\n    let isValid = true\r\n\r\n    if (name.trim().length < 3) {\r\n      nameErr.nameShort = 'Company Name is too short'\r\n      isValid = false\r\n    }\r\n\r\n    if (name.trim().length > 10) {\r\n      nameErr.nameLong = 'Company Name is too long'\r\n      isValid = false\r\n    }\r\n\r\n    if (telephone.trim().length == 10) {\r\n      telephoneErr.telephoneLength = 'Must have 10 numbers for field'\r\n      isValid = false\r\n    }\r\n\r\n    // if (!email.include('@')) {\r\n    //   emailErr.emailInvalid = 'Email must have @ sign '\r\n    //   isValid = false\r\n    // }\r\n\r\n    setnameErr(nameErr)\r\n    settelephoneErr(telephoneErr)\r\n    setemailErr(emailErr)\r\n\r\n    return isValid\r\n  }\r\n\r\n  function onReset() {\r\n    console.log('RESET PROCEED!')\r\n    setName('')\r\n    setEmail('')\r\n    setAddress('')\r\n    setTelephone('-')\r\n    setCustomers('')\r\n    setCenters('')\r\n    setLogo('')\r\n    setOpenhour('')\r\n    setClosehour('')\r\n    setOpendays('')\r\n    setSlogan('')\r\n    setAbout('')\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"card\">\r\n        <h2>ADD COMPANY</h2>\r\n        <div className=\"container3\">\r\n          <div className=\"container1\">\r\n            <Form onSubmit={createData} onReset={onReset}>\r\n              {/* <div className=\"container2\"> */}\r\n              <div hidden={isShow}>\r\n                <div className=\"company-registartion-container-part\">\r\n                  <Form.Group as={Row} controlId=\"name\" className=\"companylabel\">\r\n                    <Form.Label column sm={2}>\r\n                      Company Name\r\n                    </Form.Label>\r\n                    <Col sm={5} className=\"company-input-layer\">\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"companyname\"\r\n                        value={name}\r\n                        onChange={(e) => {\r\n                          setName(e.target.value)\r\n                        }}\r\n                        placeholder=\"company Name\"\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Form.Group>\r\n                  {Object.keys(nameErr).map((key) => {\r\n                    return <div style={{ color: 'red' }}>{nameErr[key]}</div>\r\n                  })}\r\n\r\n                  <Form.Group as={Row} controlId=\"Email\" className={'pt-3'}>\r\n                    <Form.Label column sm={2} className=\"companylabel\">\r\n                      E-mail\r\n                    </Form.Label>\r\n                    <Col sm={5} class>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"\"\r\n                        name=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => {\r\n                          setEmail(e.target.value)\r\n                        }}\r\n                        placeholder=\"company Email\"\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Form.Group>\r\n                  {Object.keys(emailErr).map((key) => {\r\n                    return <div style={{ color: 'red' }}>{emailErr[key]}</div>\r\n                  })}\r\n\r\n                  <Form.Group as={Row} controlId=\"address\" className={'pt-3'}>\r\n                    <Form.Label column sm={2} className=\"companylabel\">\r\n                      Address\r\n                    </Form.Label>\r\n                    <Col sm={5} class>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        value={address}\r\n                        onChange={(e) => {\r\n                          setAddress(e.target.value)\r\n                        }}\r\n                        placeholder=\"company Address\"\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"Telephone\" className={'pt-3'}>\r\n                    <Form.Label column sm={2} className=\"companylabel\">\r\n                      Telephone\r\n                    </Form.Label>\r\n\r\n                    <Col sm={5}>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"Number\"\r\n                        name=\"Telephone\"\r\n                        value={telephone}\r\n                        onChange={(e) => {\r\n                          setTelephone(e.target.value)\r\n                        }}\r\n                        placeholder=\"No Of Centers\"\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Form.Group>\r\n                  {Object.keys(telephoneErr).map((key) => {\r\n                    return <div style={{ color: 'red' }}>{telephoneErr[key]}</div>\r\n                  })}\r\n\r\n                  <Form.Group as={Row} controlId=\"centers\" className={'pt-3'}>\r\n                    <Form.Label column sm={2} className=\"companylabel\">\r\n                      No of Centers\r\n                    </Form.Label>\r\n                    <Col sm={5}>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"Number\"\r\n                        name=\"centers\"\r\n                        value={centers}\r\n                        onChange={(e) => {\r\n                          setCenters(e.target.value)\r\n                        }}\r\n                        placeholder=\"No Of Centers\"\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Form.Group>\r\n                </div>\r\n\r\n                <div className=\"company-registartion-container-part\">\r\n                  <Form.Group as={Row} controlId=\"logo\" className={'pt-3'}>\r\n                    <Form.Label column sm={2} className=\"companylabel\">\r\n                      Company Logo\r\n                    </Form.Label>\r\n                    <Col sm={5}>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"logo\"\r\n                        value={logo}\r\n                        onChange={(e) => {\r\n                          setLogo(e.target.value)\r\n                        }}\r\n                        placeholder=\"company Logo Url\"\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"openhour\" className={'pt-3'}>\r\n                    <Form.Label column sm={2} className=\"companylabel\">\r\n                      Opening Hour\r\n                    </Form.Label>\r\n                    <Col sm={5}>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"Time\"\r\n                        name=\"openhour\"\r\n                        value={openhour}\r\n                        onChange={(e) => {\r\n                          setOpenhour(e.target.value)\r\n                        }}\r\n                        placeholder=\"Open Hour\"\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group as={Row} controlId=\"closehour\" className={'pt-3'}>\r\n                    <Form.Label column sm={2} className=\"companylabel\">\r\n                      Closing Hour\r\n                    </Form.Label>\r\n                    <Col sm={5}>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"Time\"\r\n                        name=\"closehour\"\r\n                        value={closehour}\r\n                        onChange={(e) => {\r\n                          setClosehour(e.target.value)\r\n                        }}\r\n                      ></Form.Control>\r\n                    </Col>\r\n                  </Form.Group>\r\n\r\n                  {/* <Form.Group as={Row} controlId=\"opendays\" className={\"pt-3\"}>\r\n                  <Form.Label column sm={2} className=\"companylabel\">\r\n                    Opening Days\r\n                  </Form.Label>\r\n                  <Col sm={5}>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"opendays\"\r\n                      value={opendays}\r\n                      onChange={(e) => {\r\n                        setOpendays(e.target.value);\r\n                      }}\r\n                    ></Form.Control>\r\n                  </Col>\r\n                </Form.Group> */}\r\n                </div>\r\n\r\n                <div>\r\n                  <Button type=\"button\" variant=\"secondary\" onClick={() => setIsShow(true)}>\r\n                    Next\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n\r\n              <div hidden={!isShow}>\r\n                <Form.Group as={Row} controlId=\"slogans\" className={'pt-3'}>\r\n                  <Form.Label column sm={2} className=\"companylabel\">\r\n                    Company Slogan\r\n                  </Form.Label>\r\n                  <Col sm={5}>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"slogan\"\r\n                      value={slogan}\r\n                      onChange={(e) => {\r\n                        setSlogan(e.target.value)\r\n                      }}\r\n                      placeholder=\"company Slogan\"\r\n                    ></Form.Control>\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row} controlId=\"about\" className={'pt-3'}>\r\n                  <Form.Label column sm={2} className=\"companylabel\">\r\n                    About Company\r\n                  </Form.Label>\r\n                  <Col sm={5}>\r\n                    <Form.Control\r\n                      required\r\n                      type=\"text\"\r\n                      name=\"about\"\r\n                      value={about}\r\n                      onChange={(e) => {\r\n                        setAbout(e.target.value)\r\n                      }}\r\n                      placeholder=\"About Company\"\r\n                    ></Form.Control>\r\n                  </Col>\r\n                </Form.Group>\r\n                <button type=\"button\" variant=\"secondary\" onClick={() => setIsShow(false)}>\r\n                  Previous\r\n                </button>\r\n                <Form.Group as={Row} className={'pt-2'}>\r\n                  <Col sm={{ span: 10, offset: 2 }}>\r\n                    <Button type=\"submit\">CREATE</Button>\r\n                    {'\\u00A0'}\r\n                    <Button type=\"reset\" className=\"btn-danger\">\r\n                      RESET\r\n                    </Button>\r\n                    {'\\u00A0'}\r\n                  </Col>\r\n                </Form.Group>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["AddCompany","useState","name","setName","email","setEmail","address","setAddress","telephone","setTelephone","customers","setCustomers","centers","setCenters","logo","setLogo","openhour","setOpenhour","closehour","setClosehour","opendays","setOpendays","slogan","setSlogan","about","setAbout","nameErr","setnameErr","telephoneErr","settelephoneErr","emailErr","setemailErr","isShow","setIsShow","formValidation","isValid","trim","length","nameShort","nameLong","telephoneLength","onReset","console","log","className","Form","onSubmit","e","preventDefault","company","axios","then","alert","catch","err","hidden","as","Row","controlId","column","sm","Col","required","type","value","onChange","target","placeholder","Object","keys","map","key","style","color","class","Button","variant","onClick","span","offset"],"sourceRoot":""}